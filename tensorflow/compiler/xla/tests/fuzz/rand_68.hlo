/* This file is autogenerated! Please don't edit! */
HloModule xla_computation_unknown, entry_computation_layout={(f32[12]{0})->(f32[12]{0})}

ENTRY main.153 {
  Arg_0.1 = f32[12]{0} parameter(0)
  sign.148 = f32[12]{0} sign(Arg_0.1)
  abs.62 = f32[12]{0} abs(Arg_0.1)
  constant.52 = f32[] constant(8)
  broadcast.53 = f32[12]{0} broadcast(constant.52), dimensions={}
  compare.146 = pred[12]{0} compare(abs.62, broadcast.53), direction=LE
  constant.58 = f32[] constant(0.5)
  broadcast.59 = f32[12]{0} broadcast(constant.58), dimensions={}
  multiply.63 = f32[12]{0} multiply(abs.62, broadcast.59)
  constant.56 = f32[] constant(2)
  broadcast.57 = f32[12]{0} broadcast(constant.56), dimensions={}
  subtract.64 = f32[12]{0} subtract(multiply.63, broadcast.57)
  constant.50 = f32[] constant(0)
  broadcast.51 = f32[12]{0} broadcast(constant.50), dimensions={}
  multiply.65 = f32[12]{0} multiply(subtract.64, broadcast.51)
  subtract.66 = f32[12]{0} subtract(multiply.65, broadcast.51)
  constant.48 = f32[] constant(9.38153732e-09)
  broadcast.49 = f32[12]{0} broadcast(constant.48), dimensions={}
  add.67 = f32[12]{0} add(subtract.66, broadcast.49)
  multiply.68 = f32[12]{0} multiply(subtract.64, add.67)
  subtract.69 = f32[12]{0} subtract(multiply.68, broadcast.51)
  constant.46 = f32[] constant(-4.44505908e-08)
  broadcast.47 = f32[12]{0} broadcast(constant.46), dimensions={}
  add.70 = f32[12]{0} add(subtract.69, broadcast.47)
  multiply.71 = f32[12]{0} multiply(subtract.64, add.70)
  subtract.72 = f32[12]{0} subtract(multiply.71, add.67)
  constant.44 = f32[] constant(2.00329481e-07)
  broadcast.45 = f32[12]{0} broadcast(constant.44), dimensions={}
  add.73 = f32[12]{0} add(subtract.72, broadcast.45)
  multiply.74 = f32[12]{0} multiply(subtract.64, add.73)
  subtract.75 = f32[12]{0} subtract(multiply.74, add.70)
  constant.42 = f32[] constant(-8.56872e-07)
  broadcast.43 = f32[12]{0} broadcast(constant.42), dimensions={}
  add.76 = f32[12]{0} add(subtract.75, broadcast.43)
  multiply.77 = f32[12]{0} multiply(subtract.64, add.76)
  subtract.78 = f32[12]{0} subtract(multiply.77, add.73)
  constant.40 = f32[] constant(3.47025139e-06)
  broadcast.41 = f32[12]{0} broadcast(constant.40), dimensions={}
  add.79 = f32[12]{0} add(subtract.78, broadcast.41)
  multiply.80 = f32[12]{0} multiply(subtract.64, add.79)
  subtract.81 = f32[12]{0} subtract(multiply.80, add.76)
  constant.38 = f32[] constant(-1.32731639e-05)
  broadcast.39 = f32[12]{0} broadcast(constant.38), dimensions={}
  add.82 = f32[12]{0} add(subtract.81, broadcast.39)
  multiply.83 = f32[12]{0} multiply(subtract.64, add.82)
  subtract.84 = f32[12]{0} subtract(multiply.83, add.79)
  constant.36 = f32[] constant(4.78156508e-05)
  broadcast.37 = f32[12]{0} broadcast(constant.36), dimensions={}
  add.85 = f32[12]{0} add(subtract.84, broadcast.37)
  multiply.86 = f32[12]{0} multiply(subtract.64, add.85)
  subtract.87 = f32[12]{0} subtract(multiply.86, add.82)
  constant.34 = f32[] constant(-0.000161760821)
  broadcast.35 = f32[12]{0} broadcast(constant.34), dimensions={}
  add.88 = f32[12]{0} add(subtract.87, broadcast.35)
  multiply.89 = f32[12]{0} multiply(subtract.64, add.88)
  subtract.90 = f32[12]{0} subtract(multiply.89, add.85)
  constant.32 = f32[] constant(0.000512286)
  broadcast.33 = f32[12]{0} broadcast(constant.32), dimensions={}
  add.91 = f32[12]{0} add(subtract.90, broadcast.33)
  multiply.92 = f32[12]{0} multiply(subtract.64, add.91)
  subtract.93 = f32[12]{0} subtract(multiply.92, add.88)
  constant.30 = f32[] constant(-0.00151357241)
  broadcast.31 = f32[12]{0} broadcast(constant.30), dimensions={}
  add.94 = f32[12]{0} add(subtract.93, broadcast.31)
  multiply.95 = f32[12]{0} multiply(subtract.64, add.94)
  subtract.96 = f32[12]{0} subtract(multiply.95, add.91)
  constant.28 = f32[] constant(0.0041564228)
  broadcast.29 = f32[12]{0} broadcast(constant.28), dimensions={}
  add.97 = f32[12]{0} add(subtract.96, broadcast.29)
  multiply.98 = f32[12]{0} multiply(subtract.64, add.97)
  subtract.99 = f32[12]{0} subtract(multiply.98, add.94)
  constant.26 = f32[] constant(-0.0105640851)
  broadcast.27 = f32[12]{0} broadcast(constant.26), dimensions={}
  add.100 = f32[12]{0} add(subtract.99, broadcast.27)
  multiply.101 = f32[12]{0} multiply(subtract.64, add.100)
  subtract.102 = f32[12]{0} subtract(multiply.101, add.97)
  constant.24 = f32[] constant(0.0247264486)
  broadcast.25 = f32[12]{0} broadcast(constant.24), dimensions={}
  add.103 = f32[12]{0} add(subtract.102, broadcast.25)
  multiply.104 = f32[12]{0} multiply(subtract.64, add.103)
  subtract.105 = f32[12]{0} subtract(multiply.104, add.100)
  constant.22 = f32[] constant(-0.0529459827)
  broadcast.23 = f32[12]{0} broadcast(constant.22), dimensions={}
  add.106 = f32[12]{0} add(subtract.105, broadcast.23)
  multiply.107 = f32[12]{0} multiply(subtract.64, add.106)
  subtract.108 = f32[12]{0} subtract(multiply.107, add.103)
  constant.20 = f32[] constant(0.102643661)
  broadcast.21 = f32[12]{0} broadcast(constant.20), dimensions={}
  add.109 = f32[12]{0} add(subtract.108, broadcast.21)
  multiply.110 = f32[12]{0} multiply(subtract.64, add.109)
  subtract.111 = f32[12]{0} subtract(multiply.110, add.106)
  constant.18 = f32[] constant(-0.176416516)
  broadcast.19 = f32[12]{0} broadcast(constant.18), dimensions={}
  add.112 = f32[12]{0} add(subtract.111, broadcast.19)
  multiply.113 = f32[12]{0} multiply(subtract.64, add.112)
  subtract.114 = f32[12]{0} subtract(multiply.113, add.109)
  constant.16 = f32[] constant(0.252587199)
  broadcast.17 = f32[12]{0} broadcast(constant.16), dimensions={}
  add.115 = f32[12]{0} add(subtract.114, broadcast.17)
  subtract.116 = f32[12]{0} subtract(add.115, add.109)
  multiply.117 = f32[12]{0} multiply(subtract.116, broadcast.59)
  multiply.118 = f32[12]{0} multiply(abs.62, multiply.117)
  constant.54 = f32[] constant(32)
  broadcast.55 = f32[12]{0} broadcast(constant.54), dimensions={}
  divide.119 = f32[12]{0} divide(broadcast.55, abs.62)
  subtract.120 = f32[12]{0} subtract(divide.119, broadcast.57)
  multiply.121 = f32[12]{0} multiply(subtract.120, broadcast.51)
  subtract.122 = f32[12]{0} subtract(multiply.121, broadcast.51)
  constant.14 = f32[] constant(-3.83538046e-09)
  broadcast.15 = f32[12]{0} broadcast(constant.14), dimensions={}
  add.123 = f32[12]{0} add(subtract.122, broadcast.15)
  multiply.124 = f32[12]{0} multiply(subtract.120, add.123)
  subtract.125 = f32[12]{0} subtract(multiply.124, broadcast.51)
  constant.12 = f32[] constant(-2.63146891e-08)
  broadcast.13 = f32[12]{0} broadcast(constant.12), dimensions={}
  add.126 = f32[12]{0} add(subtract.125, broadcast.13)
  multiply.127 = f32[12]{0} multiply(subtract.120, add.126)
  subtract.128 = f32[12]{0} subtract(multiply.127, add.123)
  constant.10 = f32[] constant(-2.51223611e-07)
  broadcast.11 = f32[12]{0} broadcast(constant.10), dimensions={}
  add.129 = f32[12]{0} add(subtract.128, broadcast.11)
  multiply.130 = f32[12]{0} multiply(subtract.120, add.129)
  subtract.131 = f32[12]{0} subtract(multiply.130, add.126)
  constant.8 = f32[] constant(-3.88256467e-06)
  broadcast.9 = f32[12]{0} broadcast(constant.8), dimensions={}
  add.132 = f32[12]{0} add(subtract.131, broadcast.9)
  multiply.133 = f32[12]{0} multiply(subtract.120, add.132)
  subtract.134 = f32[12]{0} subtract(multiply.133, add.129)
  constant.6 = f32[] constant(-0.000110588939)
  broadcast.7 = f32[12]{0} broadcast(constant.6), dimensions={}
  add.135 = f32[12]{0} add(subtract.134, broadcast.7)
  multiply.136 = f32[12]{0} multiply(subtract.120, add.135)
  subtract.137 = f32[12]{0} subtract(multiply.136, add.132)
  constant.4 = f32[] constant(-0.00976109784)
  broadcast.5 = f32[12]{0} broadcast(constant.4), dimensions={}
  add.138 = f32[12]{0} add(subtract.137, broadcast.5)
  multiply.139 = f32[12]{0} multiply(subtract.120, add.138)
  subtract.140 = f32[12]{0} subtract(multiply.139, add.135)
  constant.2 = f32[] constant(0.778576255)
  broadcast.3 = f32[12]{0} broadcast(constant.2), dimensions={}
  add.141 = f32[12]{0} add(subtract.140, broadcast.3)
  subtract.142 = f32[12]{0} subtract(add.141, add.135)
  multiply.143 = f32[12]{0} multiply(subtract.142, broadcast.59)
  sqrt.144 = f32[12]{0} sqrt(abs.62)
  divide.145 = f32[12]{0} divide(multiply.143, sqrt.144)
  select.147 = f32[12]{0} select(compare.146, multiply.118, divide.145)
  multiply.149 = f32[12]{0} multiply(sign.148, select.147)
  constant.60 = f32[] constant(-0.9921875)
  broadcast.61 = f32[12]{0} broadcast(constant.60), dimensions={}
  maximum.150 = f32[12]{0} maximum(multiply.149, broadcast.61)
  log-plus-one.151 = f32[12]{0} log-plus-one(maximum.150)
  ROOT tuple.152 = (f32[12]{0}) tuple(log-plus-one.151)
}

